name: Build and Release RemMeter

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore wpf/RemMeter.csproj
      
    - name: Build
      run: dotnet build wpf/RemMeter.csproj --no-restore --configuration Release
      
    # Framework-dependent builds (小さいサイズ、.NET 8.0ランタイム必要)
    - name: Publish Framework-dependent Windows x64
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained false --output ./publish/framework-dependent/win-x64 --property:PublishSingleFile=true
      
    - name: Publish Framework-dependent Windows x86
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained false --output ./publish/framework-dependent/win-x86 --property:PublishSingleFile=true
      
    # Self-contained builds (大きいサイズ、.NETランタイム不要)
    - name: Publish Self-contained Windows x64
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained true --output ./publish/self-contained/win-x64 --property:PublishSingleFile=true --property:PublishTrimmed=false
      
    - name: Publish Self-contained Windows x86
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained true --output ./publish/self-contained/win-x86 --property:PublishSingleFile=true --property:PublishTrimmed=false
      
    # Framework-dependent artifacts
    - name: Upload Framework-dependent Windows x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemMeter-framework-dependent-win-x64
        path: ./publish/framework-dependent/win-x64/RemMeter.exe
        
    - name: Upload Framework-dependent Windows x86 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemMeter-framework-dependent-win-x86
        path: ./publish/framework-dependent/win-x86/RemMeter.exe
        
    # Self-contained artifacts
    - name: Upload Self-contained Windows x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemMeter-self-contained-win-x64
        path: ./publish/self-contained/win-x64/RemMeter.exe
        
    - name: Upload Self-contained Windows x86 artifact
      uses: actions/upload-artifact@v4
      with:
        name: RemMeter-self-contained-win-x86
        path: ./publish/self-contained/win-x86/RemMeter.exe

  release-latest:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Create release directory and copy files
      run: |
        mkdir -p release
        cp "./artifacts/RemMeter-framework-dependent-win-x64/RemMeter.exe" "./release/RemMeter-framework-dependent-win-x64.exe"
        cp "./artifacts/RemMeter-framework-dependent-win-x86/RemMeter.exe" "./release/RemMeter-framework-dependent-win-x86.exe"
        cp "./artifacts/RemMeter-self-contained-win-x64/RemMeter.exe" "./release/RemMeter-self-contained-win-x64.exe"
        cp "./artifacts/RemMeter-self-contained-win-x86/RemMeter.exe" "./release/RemMeter-self-contained-win-x86.exe"
        
    - name: Delete previous latest release
      run: |
        if gh release view latest >/dev/null 2>&1; then
          echo "Deleting existing latest release..."
          gh release delete latest --yes --cleanup-tag
        else
          echo "No previous latest release found"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Latest Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: "Latest Build"
        body: |
          ## RemMeter - Latest Build
          
          🚀 **Automatic build from the latest master branch**
          
          プレゼンテーション用のタイムキーパーアプリケーションです。
          
          ### 📥 ダウンロード
          
          #### 🎯 推奨：Framework-dependent版（小さいサイズ）
          - **RemMeter-framework-dependent-win-x64.exe** - 64bit Windows用（約5-10MB）
          - **RemMeter-framework-dependent-win-x86.exe** - 32bit Windows用（約5-10MB）
          
          ⚠️ **要件**: .NET 8.0 Desktop Runtimeが必要です
          - 未インストールの場合、アプリ実行時に自動でダウンロードページに案内されます
          - [.NET 8.0 Desktop Runtime ダウンロード](https://dotnet.microsoft.com/download/dotnet/8.0)
          
          #### 🔧 Self-contained版（大きいサイズ、ランタイム不要）
          - **RemMeter-self-contained-win-x64.exe** - 64bit Windows用（約80-120MB）
          - **RemMeter-self-contained-win-x86.exe** - 32bit Windows用（約80-120MB）
          
          ✅ **.NETランタイム不要** - どのWindows PCでもそのまま実行可能
          
          ### ✨ 主要機能
          - **4つの配置位置**: 右端・左端・上端・下端から選択可能
          - **マルチディスプレー対応**: 表示するディスプレーを選択可能
          - **視覚的な進捗表示**: 段階的な色変化（緑→オレンジ→赤色点滅）
          - **Always on top**: 他のウィンドウの上に常に表示
          - **ホバーコントロール**: 一時停止・再開・停止機能
          
          ### 🚀 使い方
          1. お使いの環境に適したファイルをダウンロード
          2. ダウンロードしたexeファイルを実行
          3. 時間設定、ディスプレー選択、配置位置を設定
          4. 「開始」ボタンでタイマー開始
          
          ### 💻 動作環境
          - Windows 10/11
          - Framework-dependent版: .NET 8.0 Desktop Runtime必要
          - Self-contained版: 追加ソフトウェア不要
          
          ---
          📅 **Build Date**: ${{ github.event.head_commit.timestamp }}  
          🔗 **Commit**: ${{ github.sha }}
        files: |
          ./release/RemMeter-framework-dependent-win-x64.exe
          ./release/RemMeter-framework-dependent-win-x86.exe
          ./release/RemMeter-self-contained-win-x64.exe
          ./release/RemMeter-self-contained-win-x86.exe
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-tagged:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    # Framework-dependent builds for release
    - name: Publish Framework-dependent Windows x64 for Release
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained false --output ./release/framework-dependent/win-x64 --property:PublishSingleFile=true
      
    - name: Publish Framework-dependent Windows x86 for Release
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained false --output ./release/framework-dependent/win-x86 --property:PublishSingleFile=true
      
    # Self-contained builds for release
    - name: Publish Self-contained Windows x64 for Release
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x64 --self-contained true --output ./release/self-contained/win-x64 --property:PublishSingleFile=true --property:PublishTrimmed=false
      
    - name: Publish Self-contained Windows x86 for Release
      run: dotnet publish wpf/RemMeter.csproj --configuration Release --runtime win-x86 --self-contained true --output ./release/self-contained/win-x86 --property:PublishSingleFile=true --property:PublishTrimmed=false
      
    # Rename files for clarity
    - name: Rename release files
      run: |
        mv "./release/framework-dependent/win-x64/RemMeter.exe" "./release/RemMeter-framework-dependent-win-x64.exe"
        mv "./release/framework-dependent/win-x86/RemMeter.exe" "./release/RemMeter-framework-dependent-win-x86.exe"
        mv "./release/self-contained/win-x64/RemMeter.exe" "./release/RemMeter-self-contained-win-x64.exe"
        mv "./release/self-contained/win-x86/RemMeter.exe" "./release/RemMeter-self-contained-win-x86.exe"
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./release/RemMeter-framework-dependent-win-x64.exe
          ./release/RemMeter-framework-dependent-win-x86.exe
          ./release/RemMeter-self-contained-win-x64.exe
          ./release/RemMeter-self-contained-win-x86.exe
        name: RemMeter ${{ github.ref_name }}
        body: |
          ## RemMeter - WPF版
          
          プレゼンテーション用のタイムキーパーアプリケーションです。
          
          ### 📥 ダウンロード
          
          #### 🎯 推奨：Framework-dependent版（小さいサイズ）
          - **RemMeter-framework-dependent-win-x64.exe** - 64bit Windows用（約5-10MB）
          - **RemMeter-framework-dependent-win-x86.exe** - 32bit Windows用（約5-10MB）
          
          ⚠️ **要件**: .NET 8.0 Desktop Runtimeが必要です
          - 未インストールの場合、アプリ実行時に自動でダウンロードページに案内されます
          - [.NET 8.0 Desktop Runtime ダウンロード](https://dotnet.microsoft.com/download/dotnet/8.0)
          
          #### 🔧 Self-contained版（大きいサイズ、ランタイム不要）
          - **RemMeter-self-contained-win-x64.exe** - 64bit Windows用（約80-120MB）
          - **RemMeter-self-contained-win-x86.exe** - 32bit Windows用（約80-120MB）
          
          ✅ **.NETランタイム不要** - どのWindows PCでもそのまま実行可能
          
          ### ✨ 主要機能
          - **4つの配置位置**: 右端・左端・上端・下端から選択可能
          - **マルチディスプレー対応**: 表示するディスプレーを選択可能
          - **視覚的な進捗表示**: 段階的な色変化（緑→オレンジ→赤色点滅）
          - **Always on top**: 他のウィンドウの上に常に表示
          - **ホバーコントロール**: 一時停止・再開・停止機能
          
          ### 🚀 使い方
          1. お使いの環境に適したファイルをダウンロード
          2. ダウンロードしたexeファイルを実行
          3. 時間設定、ディスプレー選択、配置位置を設定
          4. 「開始」ボタンでタイマー開始
          
          ### 💻 動作環境
          - Windows 10/11
          - Framework-dependent版: .NET 8.0 Desktop Runtime必要
          - Self-contained版: 追加ソフトウェア不要
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 